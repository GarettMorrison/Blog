<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Garett Morrison</title>
        <link>https://garettmorrison.net/posts/</link>
        <description>Recent content in Posts on Garett Morrison</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Tue, 11 May 2021 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://garettmorrison.net/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>In Progress</title>
            <link>https://garettmorrison.net/posts/in-progress/</link>
            <pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate>
            
            <guid>https://garettmorrison.net/posts/in-progress/</guid>
            <description>There are a number of projects I am either still working on or have not yet written a full post about. This page is a way for me to track progress and have an online record of things that I am currently working on.
 PlantSim I am fascinated by emergent behavior in systems, and frequently program simulations to experiment with these properties. This particular sim is a cell placement evolution sim.</description>
            <content type="html"><![CDATA[<p>There are a number of projects I am either still working on or have not yet written a full post about. This page is a way for me to track progress and have an online record of things that I am currently working on.</p>

<div class="breakHeader">
	<hr>
</div>
<h3 id="plantsim">PlantSim</h3>
<p>I am fascinated by emergent behavior in systems, and frequently program simulations to experiment with these properties. This particular sim is a cell placement evolution sim. The program &ldquo;grows&rdquo; the plant based on an input set of instructions. There are 3 types of cells the sim can place. Leaves, the green X cells, generate a set amount of food every tick. Stores, the blue + cells, take food from all adjacent cells and add it to the plant&rsquo;s total. Veins, the yellow line cells, take food from 3 adjacent cells and give it to the cell they are pointing towards. The plant can use this food to place additional cells, and thus grows exponentially. The program repeatedly runs the simulation, each time varying the instruction set and saving changes which improved the total food collected. This allows it to evolve over time, which results in some interesting patterns.</p>


<div class="row">
	<div class="column" style = "width: 50%">
		<img src="https://i.imgur.com/OiftWXu.gif" alt="BigGuy"  style="position:center; width:95%; border-radius:8px">
	</div>
	<div class="column" style = "width: 50%">
		This is the final product of hundreds of generations of evolution. As stores are much more expensive than the other cells, the sim evolves extensive vein networks to gather food and funnel it into the limited number of stores.
	</div>
</div>
</br>

<div class="row">
	<div class="column" style = "width: 50%">
		<img src="https://i.imgur.com/3BJKRcr.gif" alt="PassOff"  style="position:center; width:95%; border-radius:8px">
	</div>
	<div class="column" style = "width: 50%">
		This is an interestingly bugged version of the sim. Early in development, rather than place the pricy stores early on and feed into them, the sim would stack a ton of food onto a leaf cell using veins and then place an adjacent store later. To prevent this I set a cap on how much food a leaf can store, hoping that the sim would generate more organic patterns. Instead, it discovered that it could place pairs of veins facing each other, constantly moving the food so my storage cap didn't delete it. It then does the same last minute store placement, completely avoiding the restriction. 
	</div>
</div>
</br>


<div class="breakHeader">
	<hr>
</div>
<h3 id="autolisp_tools">AutoLisp_Tools</h3>
<p>UCP, the software I use to run the laser cutter, has a weird quirk where if you send it polylines, a type of AutoCAD object, it cuts at a small but unpredictable fraction of the speed it is set to. This is especially fun when handling student requests, as most image conversion software outputs exclusively polylines. I eventually got so frustrated with this that I spent a week teaching myself Lisp and AutoCADs command API, and then wrote a suite of tools to convert various linetypes into line segments. This culminated in a single command reducing the cut time of polylines parts by 75%, saving hours. <a href="https://github.com/GarettMorrison/AutoCode/tree/main/AutoLisp_Tools">Github</a></p>

<div class="breakHeader">
	<hr>
</div>
<h3 id="imageconv">ImageConv</h3>


<div class="row">
	<div class="column" style = "width: 40%">
		<img src="/img/inProgress/Portrait.jpg" alt="Self Portait" style="width:95%; border-radius:8px">
	</div>
	<div class="column" style = "width: 60%">
		Procedural generation and emergence is one of my favorite areas in computer science. This is a set of programs which convert images to DXF files, attempting to recreate the original by drawing perfect lines or points. I've experimented with a handful of techniques, including drawing lines across the image and pointillism, the practice of drawing large numbers of dots with varied density to imitate shading. 
	</div>
</div>


<div class="row">
	<div class="column" style = "width: 40%">
		<img src="/img/inProgress/StarryNight_Dense.jpg" alt="Starry Night" style="width:95%; padding-top:8px; border-radius:16px">
	</div>
	<div class="column" style = "width: 60%">
		What I ultimately settled on was a script which takes the pointillism output and procedurally places connecting lines between the dots, resulting in an interesting combination between line art and pointilism. This allows the laser to engrave more visibly, as the engraver struggles to make clear dots. That is the code which I used to generate the output on the left.
	</div>
</div>


<p><a href="https://github.com/GarettMorrison/AutoCode/tree/main/ImageConv">Github</a><br>
<a href="https://imgur.com/gallery/nY0wTjr">Gallery</a></p>

<div class="breakHeader">
	<hr>
</div>
<h3 id="drawbot">DrawBot</h3>
<p>I have been experimenting with progressively more complicated attempts to make a CNC plotter. This started as me wanting to better understand CNC machines by designing one from scratch, and has since gotten progressively more out of hand. I am hoping to apply my ImageConv project to generate patterns to draw.</p>


<h4>Version 1</h4>
<div class="row">
	<div class="column" style = "width: 50%">
		<img src="/img/inProgress/Drawbot_V1.png" alt="Version 1" style="width:95%; border-radius:8px">
	</div>
	<div class="column" style = "width: 50%">
		Version one was the definition of a learning experience. My objective was to implement 2 axis motion with as few precision parts as possible. I chose to run a two pulley system, where a pair of steppers precisely control two cord lengths running to the head. I also added a servo to raise and lower the pen on the head.
		<br> 
		<br>
		There were a handful of fundamental flaws that resulted in the need for a V2. The head would swing away from the surface, limiting printing to angled backplates. The cords were wrapped around the pulley once and then weighted, to prevent spooling from impacting the radius of the pulley. It ultimately just allowed slipping which resulting in a loss of accuracy over time. 
	</div>
</div>

<h4>Version 2</h4>
<div class="row">
	<div class="column" style = "width: 50%">
		<img src="/img/inProgress/DrawBot_UnderConstruction.jpg" alt="Under Construction" style="width:95%; border-radius:30px">
	</div>
	<div class="column" style = "width: 50%">
		As any good engineer does when the time comes to make a second version with minor improvements, I had a cooler idea and immediately started again from scratch. I decided to design an affordable, easy to setup, feedback driven 2 axis robotic arm, which is a huge shift from the previous design. The entire mechanism is tension based, driven by pulleys in the base of the machine. 
	</div>
</div>
<br>

<p>I am using cheap dc motors to control the angle of the two middle joints of the arm using a cord and reading their positions with potentiometers. There is also a servo in the base controlling a pulley which pulls the pen onto the paper. It should be able to draw in a ~3' by ~3' square. I intend to print color images by running multiple passes with different markers. I also intend to implement bluetooth control and a SD card reader to more easily run long term print jobs.</p>
]]></content>
        </item>
        
        <item>
            <title>DIY Roller Blades</title>
            <link>https://garettmorrison.net/posts/diy-roller-blades/</link>
            <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
            
            <guid>https://garettmorrison.net/posts/diy-roller-blades/</guid>
            <description>.row::after{ content: &#34;&#34;; clear: both; display: table; } .columnLeft { float: left; width: 47.05882%; position: relative; overflow: hidden; /*padding-right: 0.5;*/ } .columnRight { float: left; width: 52.94118%; position: relative; overflow: hidden; /*padding-left: 0.5;*/ padding-top: 94.11765%; } .resp-iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: 0; }  At the start of this semester I set a goal for myself: creating some form of personal transportation.</description>
            <content type="html"><![CDATA[

<style>
.row::after{
  content: "";
  clear: both;
  display: table;
}

.columnLeft {
	float: left;
	width: 47.05882%;

	position: relative;
	overflow: hidden;
	/*padding-right: 0.5;*/
}


.columnRight {
	float: left;
	width: 52.94118%;
	
	position: relative;
	overflow: hidden;
	/*padding-left: 0.5;*/
	padding-top: 94.11765%;
}



.resp-iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
}

</style>

<p>At the start of this semester I set a goal for myself: creating some form of personal transportation. After considering several options I settled on roller blades, as they posed an interesting set of challenges. Creating wearables is a distinctly different area of design from my previous projects, as human bodies tend not to fit well with the straight lines and hard edges that CAD lends itself to.</p>
<p>As is usual with my personal projects, I wanted to keep the budget as cheap as possible. That&rsquo;s why I now own what may be the only pair of wooden laser-cut  roller blades in existence. Using cheap wheels and axles off amazon and some straps, I made my first prototype, which strapped on over my shoes.</p>


<div class="row">
	<div class="columnLeft">
		<img src="/img/roller/Roller_V1_Front.jpg" alt="Front" style="width:100%">
		<img src="/img/roller/Roller_V1_Side.jpg" alt="Side" style="width:100%">
	</div>
	<div class="columnRight">
		<iframe class="resp-iframe" frameBorder="0" src="https://www.youtube.com/embed/5Qt2Pd4UqJQ?mute=1" gesture="media"  allow="encrypted-media" allowfullscreen></iframe>	
	</div>
</div>

<p>As is apparent from the concerning crack at the end of the clip, V1 was destined for a short lifespan. On my next ride one of the calf supports snapped, and with it my hopes of not spending another afternoon waiting for wood to burn and glue to dry.</p>
<p>With Version 2, I intended to resolve the oversights and errors of the first. In addition to fixing the handful of CAD errors making assembly frustrating, I added a second, interior, calf strap to reduce stress on the first one. By making spacers, I was able to more precisely adjust the fit of the blades to their user. I also adjusted the locations of the foot straps, to more securely lock down the wearer&rsquo;s shoe to the structure. The result was a more comfortable, more reliable roller blade.</p>


<div class="row">
	<div class="columnLeft">
		<img src="/img/roller/Roller_V2_Front.jpg" alt="Front" style="width:100%">
		<img src="/img/roller/Roller_V2_Side.jpg" alt="Side" style="width:100%">
	</div>
	<div class="columnRight">
		<iframe class="resp-iframe" frameBorder="0" src="https://www.youtube.com/embed/fzb1kxH1oY4?mute=1" gesture="media"  allow="encrypted-media" allowfullscreen></iframe>	
	</div>
</div>

<p>I consider this project to be a resounding success, and have used them a number of times wandering around my neighborhood. I may create a version 3, with proper brakes and cushioning that doesn&rsquo;t require you to wrap a washcloth around your legs, but for now I am just happy that I managed to create something usable for ~$50.</p>
<p>You can find the files availible for download on <a href="https://www.thingiverse.com/thing:4854835">Thingiverse</a></p>
]]></content>
        </item>
        
        <item>
            <title>Laser Cut Topographical Map</title>
            <link>https://garettmorrison.net/posts/laser-cut-topography/</link>
            <pubDate>Wed, 13 Jan 2021 00:51:29 -0600</pubDate>
            
            <guid>https://garettmorrison.net/posts/laser-cut-topography/</guid>
            <description>My family has a long and illustrious history of going backpacking in Big Bend National Park. For my sister&amp;rsquo;s birthday last year, I laser cut her a 3D topographical map of The Chisos Basin, one of our favorite locations in the park. This is a precise scale model, modeled by interpreting real world data with python.
The most challenging part of the project was locating a usable heightmap image. I dug through mapping sites and United States Geological Survey data, but what I ultimately used was terrain.</description>
            <content type="html"><![CDATA[
    <img src="/img/topo/close_up.jpg"  alt="Close up"  class="center"  style="border-radius: 8px;"  />


<p>My family has a long and illustrious history of going backpacking in Big Bend National Park. For my sister&rsquo;s birthday last year, I laser cut her a 3D topographical map of The Chisos Basin, one of our favorite locations in the park. This is a precise scale model, modeled by interpreting real world data with python.</p>

    <img src="/img/topo/wide_shot.jpg"  alt="Wide shot up"  class="center"  style="border-radius: 8px;"  />


<p>The most challenging part of the project was locating a usable heightmap image. I dug through mapping sites and United States Geological Survey data, but what I ultimately used was <a href="http://terrain.party" title="terrain.party">terrain.party</a>, a website for exporting real world data for cities skylines maps. I calculated the scale of the image by comparing the distances between cliff faces to the scale on google maps. From this I wrote a <a href="https://github.com/GarettMorrison/HeightMapSplicer" title="github.com/GarettMorrison/HeightMapSplicer">python script</a> using Pillow and some geometry to generate an image of each layer side by side, which I fed into a DXF <a href="https://cloudconvert.com/dxf-to-svg" title="cloudconvert.com">converter</a>, which produced a cuttable file. The final product is a little under 2 feet square, cut from hardboard.</p>

    <img src="/img/topo/side_shot.jpg"  alt="Side shot up"  class="middle"  style="border-radius: 8px;"  />


<p>I was later asked to reproduce the project for a map of Texas for an installation in the Zachry Engineering Building. While testing my script I generated files for one of my favorite ridiculous creations, Tall Texas, which I couldn&rsquo;t resist cutting out.</p>

    <img src="/img/topo/Tall_Texas.jpg"  alt="Tall Texas"  class="middle"  style="border-radius: 8px;"  />


]]></content>
        </item>
        
    </channel>
</rss>
